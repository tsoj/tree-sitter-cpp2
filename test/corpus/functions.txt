===========================================================
Return
===========================================================

main : () -> int = {
    return 1;
}

-----------------------------------------------------------

(source_file
  (declaration
    (identifier)
    (type
      (function_type
        (type
          (any_identifier
            (identifier)))))
    (definition
      (block
        (statement
          (return_statement
            (expression
              (literal
                (number)))))))))

===========================================================
declaration
===========================================================

hello: (a: B, b: D) = {
    e: int = 1;
}

-----------------------------------------------------------

(source_file
  (declaration
    (identifier)
    (type
      (function_type
        (parameters
          (parameter
            (identifier)
            (type
              (any_identifier
                (identifier))))
          (parameter
            (identifier)
            (type
              (any_identifier
                (identifier)))))))
    (definition
      (block
        (statement
          (declaration
            (identifier)
            (type
              (any_identifier
                (identifier)))
            (definition
              (expression
                (literal
                  (number))))))))))

===========================================================
stdio
===========================================================

_main2: () -> ::std::hello::int = {
    s: std::string = "Fred";
    myfile := fopen("xyzzy", "w");
    _ = myfile.fprintf( "Hello %s with UFCS!", s.c_str() );
    _ = myfile.fclose();
}

-----------------------------------------------------------

(source_file
  (declaration
    (identifier)
    (type
      (function_type
        (type
          (any_identifier
            (namespaced_identifier
              (namespaced_identifier
                (identifier)
                (namespaced_identifier
                  (identifier)
                  (identifier))))))))
    (definition
      (block
        (statement
          (declaration
            (identifier)
            (type
              (any_identifier
                (namespaced_identifier
                  (identifier)
                  (identifier))))
            (definition
              (expression
                (literal
                  (string))))))
        (statement
          (declaration
            (identifier)
            (definition
              (expression
                (function_call
                  (expression
                    (any_identifier
                      (identifier)))
                  (arguments
                    (expression
                      (literal
                        (string)))
                    (expression
                      (literal
                        (string)))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (method_call
                (expression
                  (any_identifier
                    (identifier)))
                (any_identifier
                  (identifier))
                (arguments
                  (expression
                    (literal
                      (string)))
                  (expression
                    (method_call
                      (expression
                        (any_identifier
                          (identifier)))
                      (any_identifier
                        (identifier)))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (method_call
                (expression
                  (any_identifier
                    (identifier)))
                (any_identifier
                  (identifier))))))))))

===========================================================
global
===========================================================

;
a := 5;
a := 5
b: type = hello();
;;;
-----------------------------------------------------------

(source_file
  (declaration
    (identifier)
    (definition
      (expression
        (literal
          (number)))))
  (declaration
    (identifier)
    (definition
      (expression
        (literal
          (number)))))
  (declaration
    (identifier)
    (type
      (any_identifier
        (identifier)))
    (definition
      (expression
        (function_call
          (expression
            (any_identifier
              (identifier))))))))

===========================================================
repeated calls
===========================================================

f0 : () -> _ = { return 42; }
f1 : () -> _ = { return f0; }
f2 : () -> _ = { return f1; }
f3 : () -> _ = { return f2; }
f4 : () -> _ = { return f3; }

main: () -> int = {
    return f4()()()()();
}

-----------------------------------------------------------

(source_file
  (declaration
    (identifier)
    (type
      (function_type
        (type
          (any_identifier
            (identifier)))))
    (definition
      (block
        (statement
          (return_statement
            (expression
              (literal
                (number))))))))
  (declaration
    (identifier)
    (type
      (function_type
        (type
          (any_identifier
            (identifier)))))
    (definition
      (block
        (statement
          (return_statement
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (type
      (function_type
        (type
          (any_identifier
            (identifier)))))
    (definition
      (block
        (statement
          (return_statement
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (type
      (function_type
        (type
          (any_identifier
            (identifier)))))
    (definition
      (block
        (statement
          (return_statement
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (type
      (function_type
        (type
          (any_identifier
            (identifier)))))
    (definition
      (block
        (statement
          (return_statement
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (type
      (function_type
        (type
          (any_identifier
            (identifier)))))
    (definition
      (block
        (statement
          (return_statement
            (expression
              (function_call
                (expression
                  (function_call
                    (expression
                      (function_call
                        (expression
                          (function_call
                            (expression
                              (function_call
                                (expression
                                  (any_identifier
                                    (identifier)))))))))))))))))))

===========================================================
unary operators
===========================================================

a := -x;
b := !x();
c := +x;
d := x++();
e := x--;
f := x*;
g := x&;
h := x~;
i := x$;
j := x...;
k := -x++;

-----------------------------------------------------------

(source_file
  (declaration
    (identifier)
    (definition
      (expression
        (unary_expression
          (unary_prefix_expression
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (definition
      (expression
        (function_call
          (expression
            (unary_expression
              (unary_prefix_expression
                (expression
                  (any_identifier
                    (identifier))))))))))
  (declaration
    (identifier)
    (definition
      (expression
        (unary_expression
          (unary_prefix_expression
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (definition
      (expression
        (function_call
          (expression
            (unary_expression
              (unary_postfix_expression
                (expression
                  (any_identifier
                    (identifier))))))))))
  (declaration
    (identifier)
    (definition
      (expression
        (unary_expression
          (unary_postfix_expression
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (definition
      (expression
        (unary_expression
          (unary_postfix_expression
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (definition
      (expression
        (unary_expression
          (unary_postfix_expression
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (definition
      (expression
        (unary_expression
          (unary_postfix_expression
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (definition
      (expression
        (unary_expression
          (unary_postfix_expression
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (definition
      (expression
        (unary_expression
          (unary_postfix_expression
            (expression
              (any_identifier
                (identifier))))))))
  (declaration
    (identifier)
    (definition
      (expression
        (unary_expression
          (unary_postfix_expression
            (expression
              (unary_expression
                (unary_prefix_expression
                  (expression
                    (any_identifier
                      (identifier))))))))))))

===========================================================
assignment
===========================================================
main: () = {
    a = -x;
    b += !x();
    c -= +x;
    d *= x++();
    e /= x--;
    f %= x*;
    g <<= x&;
    h >>= x~;
    i &= x$;
    j ^= x...;
    k |= -x++;
}
-----------------------------------------------------------
(source_file
  (declaration
    (identifier)
    (type
      (function_type))
    (definition
      (block
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (unary_expression
                (unary_prefix_expression
                  (expression
                    (any_identifier
                      (identifier))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (function_call
                (expression
                  (unary_expression
                    (unary_prefix_expression
                      (expression
                        (any_identifier
                          (identifier))))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (unary_expression
                (unary_prefix_expression
                  (expression
                    (any_identifier
                      (identifier))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (function_call
                (expression
                  (unary_expression
                    (unary_postfix_expression
                      (expression
                        (any_identifier
                          (identifier))))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (unary_expression
                (unary_postfix_expression
                  (expression
                    (any_identifier
                      (identifier))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (unary_expression
                (unary_postfix_expression
                  (expression
                    (any_identifier
                      (identifier))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (unary_expression
                (unary_postfix_expression
                  (expression
                    (any_identifier
                      (identifier))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (unary_expression
                (unary_postfix_expression
                  (expression
                    (any_identifier
                      (identifier))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (unary_expression
                (unary_postfix_expression
                  (expression
                    (any_identifier
                      (identifier))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (unary_expression
                (unary_postfix_expression
                  (expression
                    (any_identifier
                      (identifier))))))))
        (statement
          (assignment
            (any_identifier
              (identifier))
            (expression
              (unary_expression
                (unary_postfix_expression
                  (expression
                    (unary_expression
                      (unary_prefix_expression
                        (expression
                          (any_identifier
                            (identifier)))))))))))))))
