===========================================================
Member function with multiple/named return values
===========================================================
set: <Key> type = {
    container: std::set<Key>;
    iterator : type == std::set<Key>::iterator;

    insert: (inout this, value: Key) -> (where: iterator, inserted: bool) = {
        set_returned := container.insert(value);
        where    = set_returned.first;
        inserted = set_returned.second;
    };

    ssize: (this) -> i64 = std::ssize(container);

}

-----------------------------------------------------------

(source_file
  (declaration
    (non_template_identifier)
    (definition
      (left_side_of_definition
        (template_declaration_arguments
          (comma_seperated_declarations
            (function_declaration_argument
              (any_identifier
                (no_namespace_identifier
                  (non_template_identifier)))))
          (template_close_token))
        (type
          (type_type)))
      (block
        (statement
          (declaration
            (non_template_identifier)
            (no_definition_declaration
              (type
                (expression
                  (any_identifier
                    (namespaced_identifier
                      (no_namespace_identifier
                        (non_template_identifier))
                      (no_namespace_identifier
                        (template_identifier
                          (non_template_identifier)
                          (template_call_arguments
                            (expression_or_comma_expressions
                              (expression
                                (any_identifier
                                  (no_namespace_identifier
                                    (non_template_identifier)))))
                            (template_close_token)))))))))))
        (statement
          (declaration
            (non_template_identifier)
            (definition
              (left_side_of_definition
                (type
                  (type_type)))
              (expression
                (any_identifier
                  (namespaced_identifier
                    (no_namespace_identifier
                      (non_template_identifier))
                    (no_namespace_identifier
                      (template_identifier
                        (non_template_identifier)
                        (template_call_arguments
                          (expression_or_comma_expressions
                            (expression
                              (any_identifier
                                (no_namespace_identifier
                                  (non_template_identifier)))))
                          (template_close_token))))
                    (no_namespace_identifier
                      (non_template_identifier))))))))
        (statement
          (declaration
            (non_template_identifier)
            (definition
              (left_side_of_definition
                (type
                  (function_type
                    (function_type_without_return_type
                      (comma_seperated_declarations
                        (function_declaration_argument
                          (passing_style)
                          (any_identifier
                            (no_namespace_identifier
                              (non_template_identifier))))
                        (function_declaration_argument
                          (declaration
                            (non_template_identifier)
                            (no_definition_declaration
                              (type
                                (expression
                                  (any_identifier
                                    (no_namespace_identifier
                                      (non_template_identifier))))))))))
                    (type
                      (function_type
                        (function_type_without_return_type
                          (comma_seperated_declarations
                            (function_declaration_argument
                              (declaration
                                (non_template_identifier)
                                (no_definition_declaration
                                  (type
                                    (expression
                                      (any_identifier
                                        (no_namespace_identifier
                                          (non_template_identifier))))))))
                            (function_declaration_argument
                              (declaration
                                (non_template_identifier)
                                (no_definition_declaration
                                  (type
                                    (expression
                                      (any_identifier
                                        (no_namespace_identifier
                                          (non_template_identifier)))))))))))))))
              (block
                (statement
                  (declaration
                    (non_template_identifier)
                    (definition
                      (left_side_of_definition)
                      (expression
                        (method_call
                          (expression
                            (any_identifier
                              (no_namespace_identifier
                                (non_template_identifier))))
                          (any_identifier
                            (no_namespace_identifier
                              (non_template_identifier)))
                          (parentheses_expression
                            (expression_or_comma_expressions
                              (expression
                                (any_identifier
                                  (no_namespace_identifier
                                    (non_template_identifier)))))))))))
                (statement
                  (expression
                    (binary_expression
                      (expression
                        (any_identifier
                          (no_namespace_identifier
                            (non_template_identifier))))
                      (expression
                        (member_access
                          (expression
                            (any_identifier
                              (no_namespace_identifier
                                (non_template_identifier))))
                          (any_identifier
                            (no_namespace_identifier
                              (non_template_identifier))))))))
                (statement
                  (expression
                    (binary_expression
                      (expression
                        (any_identifier
                          (no_namespace_identifier
                            (non_template_identifier))))
                      (expression
                        (member_access
                          (expression
                            (any_identifier
                              (no_namespace_identifier
                                (non_template_identifier))))
                          (any_identifier
                            (no_namespace_identifier
                              (non_template_identifier))))))))))))
        (statement
          (declaration
            (non_template_identifier)
            (definition
              (left_side_of_definition
                (type
                  (function_type
                    (function_type_without_return_type
                      (comma_seperated_declarations
                        (function_declaration_argument
                          (any_identifier
                            (no_namespace_identifier
                              (non_template_identifier))))))
                    (type
                      (expression
                        (any_identifier
                          (no_namespace_identifier
                            (non_template_identifier))))))))
              (expression
                (function_call
                  (expression
                    (any_identifier
                      (namespaced_identifier
                        (no_namespace_identifier
                          (non_template_identifier))
                        (no_namespace_identifier
                          (non_template_identifier)))))
                  (parentheses_expression
                    (expression_or_comma_expressions
                      (expression
                        (any_identifier
                          (no_namespace_identifier
                            (non_template_identifier)))))))))))))))
