===========================================================
parameter direction
===========================================================

mytype: type =
{
    protected x: std::string;
    private f: (this) = { do_something_with(x); }
    public f: What;
}

-----------------------------------------------------------

(cpp2_source_file
  (cpp2_declaration
    (cpp2_cpp2_block_cpp2_declaration
      (cpp2_declaration_left_side
        (cpp2_non_cpp2_template_identifier
          (cpp2_ordinary_identifier)))
      (cpp2_cpp2_block_cpp2_definition
        (cpp2_left_side_of_cpp2_definition
          (cpp2_type
            (cpp2_expression
              (cpp2_any_identifier
                (cpp2_no_namespace_identifier
                  (cpp2_non_cpp2_template_identifier
                    (cpp2_ordinary_identifier)))))))
        (cpp2_block
          (cpp2_statement
            (cpp2_non_cpp2_cpp2_block_cpp2_statement
              (cpp2_declaration
                (cpp2_no_cpp2_definition_cpp2_declaration
                  (cpp2_declaration_left_side
                    (cpp2_non_cpp2_template_identifier
                      (cpp2_ordinary_identifier)))
                  (cpp2_type
                    (cpp2_expression
                      (cpp2_any_identifier
                        (cpp2_namespaced_identifier
                          (cpp2_no_namespace_identifier
                            (cpp2_non_cpp2_template_identifier
                              (cpp2_ordinary_identifier)))
                          (cpp2_no_namespace_identifier
                            (cpp2_non_cpp2_template_identifier
                              (cpp2_ordinary_identifier)))))))))))
          (cpp2_statement
            (cpp2_cpp2_block_cpp2_statement
              (cpp2_cpp2_block_cpp2_declaration
                (cpp2_declaration_left_side
                  (cpp2_non_cpp2_template_identifier
                    (cpp2_ordinary_identifier)))
                (cpp2_cpp2_block_cpp2_definition
                  (cpp2_left_side_of_cpp2_definition
                    (cpp2_type
                      (cpp2_function_cpp2_type
                        (cpp2_function_cpp2_type_without_return_cpp2_type
                          (cpp2_comma_seperated_cpp2_declarations
                            (cpp2_function_declaration_argument
                              (cpp2_any_identifier
                                (cpp2_no_namespace_identifier
                                  (cpp2_non_cpp2_template_identifier
                                    (cpp2_ordinary_identifier))))))))))
                  (cpp2_block
                    (cpp2_statement
                      (cpp2_non_cpp2_cpp2_block_cpp2_statement
                        (cpp2_expression
                          (cpp2_function_call
                            (cpp2_expression
                              (cpp2_any_identifier
                                (cpp2_no_namespace_identifier
                                  (cpp2_non_cpp2_template_identifier
                                    (cpp2_ordinary_identifier)))))
                            (cpp2_parentheses_cpp2_expression
                              (cpp2_expression_or_cpp2_comma_cpp2_expressions
                                (cpp2_expression
                                  (cpp2_any_identifier
                                    (cpp2_no_namespace_identifier
                                      (cpp2_non_cpp2_template_identifier
                                        (cpp2_ordinary_identifier))))))))))))))))
          (cpp2_statement
            (cpp2_non_cpp2_cpp2_block_cpp2_statement
              (cpp2_declaration
                (cpp2_no_cpp2_definition_cpp2_declaration
                  (cpp2_declaration_left_side
                    (cpp2_non_cpp2_template_identifier
                      (cpp2_ordinary_identifier)))
                  (cpp2_type
                    (cpp2_expression
                      (cpp2_any_identifier
                        (cpp2_no_namespace_identifier
                          (cpp2_non_cpp2_template_identifier
                            (cpp2_ordinary_identifier)))))))))))))))

===========================================================
multiple parameter direction and inheritance
===========================================================

abstract_base: type
= {
    print: (inout virtual this, msg: std::string);
}

derived: type
= {
    this: abstract_base;

    print: (override move this, msg: std::string) = {}
}

-----------------------------------------------------------

(cpp2_source_file
  (cpp2_declaration
    (cpp2_cpp2_block_cpp2_declaration
      (cpp2_declaration_left_side
        (cpp2_non_cpp2_template_identifier
          (cpp2_ordinary_identifier)))
      (cpp2_cpp2_block_cpp2_definition
        (cpp2_left_side_of_cpp2_definition
          (cpp2_type
            (cpp2_expression
              (cpp2_any_identifier
                (cpp2_no_namespace_identifier
                  (cpp2_non_cpp2_template_identifier
                    (cpp2_ordinary_identifier)))))))
        (cpp2_block
          (cpp2_statement
            (cpp2_non_cpp2_cpp2_block_cpp2_statement
              (cpp2_declaration
                (cpp2_no_cpp2_definition_cpp2_declaration
                  (cpp2_declaration_left_side
                    (cpp2_non_cpp2_template_identifier
                      (cpp2_ordinary_identifier)))
                  (cpp2_type
                    (cpp2_function_cpp2_type
                      (cpp2_function_cpp2_type_without_return_cpp2_type
                        (cpp2_comma_seperated_cpp2_declarations
                          (cpp2_function_declaration_argument
                            (cpp2_passing_style)
                            (cpp2_any_identifier
                              (cpp2_no_namespace_identifier
                                (cpp2_non_cpp2_template_identifier
                                  (cpp2_ordinary_identifier)))))
                          (cpp2_function_declaration_argument
                            (cpp2_declaration
                              (cpp2_no_cpp2_definition_cpp2_declaration
                                (cpp2_declaration_left_side
                                  (cpp2_non_cpp2_template_identifier
                                    (cpp2_ordinary_identifier)))
                                (cpp2_type
                                  (cpp2_expression
                                    (cpp2_any_identifier
                                      (cpp2_namespaced_identifier
                                        (cpp2_no_namespace_identifier
                                          (cpp2_non_cpp2_template_identifier
                                            (cpp2_ordinary_identifier)))
                                        (cpp2_no_namespace_identifier
                                          (cpp2_non_cpp2_template_identifier
                                            (cpp2_ordinary_identifier))))))))))))))))))))))
  (cpp2_declaration
    (cpp2_cpp2_block_cpp2_declaration
      (cpp2_declaration_left_side
        (cpp2_non_cpp2_template_identifier
          (cpp2_ordinary_identifier)))
      (cpp2_cpp2_block_cpp2_definition
        (cpp2_left_side_of_cpp2_definition
          (cpp2_type
            (cpp2_expression
              (cpp2_any_identifier
                (cpp2_no_namespace_identifier
                  (cpp2_non_cpp2_template_identifier
                    (cpp2_ordinary_identifier)))))))
        (cpp2_block
          (cpp2_statement
            (cpp2_non_cpp2_cpp2_block_cpp2_statement
              (cpp2_declaration
                (cpp2_no_cpp2_definition_cpp2_declaration
                  (cpp2_declaration_left_side
                    (cpp2_non_cpp2_template_identifier
                      (cpp2_ordinary_identifier)))
                  (cpp2_type
                    (cpp2_expression
                      (cpp2_any_identifier
                        (cpp2_no_namespace_identifier
                          (cpp2_non_cpp2_template_identifier
                            (cpp2_ordinary_identifier))))))))))
          (cpp2_statement
            (cpp2_cpp2_block_cpp2_statement
              (cpp2_cpp2_block_cpp2_declaration
                (cpp2_declaration_left_side
                  (cpp2_non_cpp2_template_identifier
                    (cpp2_ordinary_identifier)))
                (cpp2_cpp2_block_cpp2_definition
                  (cpp2_left_side_of_cpp2_definition
                    (cpp2_type
                      (cpp2_function_cpp2_type
                        (cpp2_function_cpp2_type_without_return_cpp2_type
                          (cpp2_comma_seperated_cpp2_declarations
                            (cpp2_function_declaration_argument
                              (cpp2_passing_style)
                              (cpp2_any_identifier
                                (cpp2_no_namespace_identifier
                                  (cpp2_non_cpp2_template_identifier
                                    (cpp2_ordinary_identifier)))))
                            (cpp2_function_declaration_argument
                              (cpp2_declaration
                                (cpp2_no_cpp2_definition_cpp2_declaration
                                  (cpp2_declaration_left_side
                                    (cpp2_non_cpp2_template_identifier
                                      (cpp2_ordinary_identifier)))
                                  (cpp2_type
                                    (cpp2_expression
                                      (cpp2_any_identifier
                                        (cpp2_namespaced_identifier
                                          (cpp2_no_namespace_identifier
                                            (cpp2_non_cpp2_template_identifier
                                              (cpp2_ordinary_identifier)))
                                          (cpp2_no_namespace_identifier
                                            (cpp2_non_cpp2_template_identifier
                                              (cpp2_ordinary_identifier)))))))))))))))
                  (cpp2_block))))))))))
