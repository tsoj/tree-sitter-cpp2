===========================================================
Precondition and postcondition examples
===========================================================

insert_at: (container, where: int, val: int)
    pre<bounds_safety>( 0 <= where <= container.ssize(), "position (where)$ is outside 'container'" )
    post              ( container.ssize() == container.ssize()$ + 1 )
= {
    _ = container.insert( container.begin()+where, val );
}

-----------------------------------------------------------

(source_file
  (declaration
    (block_declaration
      (declaration_left_side
        (non_template_identifier
          (ordinary_identifier)))
      (block_definition
        (left_side_of_definition
          (type
            (function_type
              (function_type_without_return_type
                (comma_seperated_declarations
                  (function_declaration_argument
                    (any_identifier
                      (no_namespace_identifier
                        (non_template_identifier
                          (ordinary_identifier)))))
                  (function_declaration_argument
                    (declaration
                      (no_definition_declaration
                        (declaration_left_side
                          (non_template_identifier
                            (ordinary_identifier)))
                        (type
                          (expression
                            (any_identifier
                              (no_namespace_identifier
                                (non_template_identifier
                                  (ordinary_identifier)))))))))
                  (function_declaration_argument
                    (declaration
                      (no_definition_declaration
                        (declaration_left_side
                          (non_template_identifier
                            (ordinary_identifier)))
                        (type
                          (expression
                            (any_identifier
                              (no_namespace_identifier
                                (non_template_identifier
                                  (ordinary_identifier)))))))))))))
          (template_call_arguments
            (expression_or_comma_expressions
              (expression
                (any_identifier
                  (no_namespace_identifier
                    (non_template_identifier
                      (ordinary_identifier)))))))
          (parentheses_expression
            (expression_or_comma_expressions
              (comma_expressions
                (expression
                  (binary_expression
                    (expression
                      (literal
                        (number)))
                    (expression
                      (binary_expression
                        (expression
                          (any_identifier
                            (no_namespace_identifier
                              (non_template_identifier
                                (ordinary_identifier)))))
                        (expression
                          (method_call
                            (expression
                              (any_identifier
                                (no_namespace_identifier
                                  (non_template_identifier
                                    (ordinary_identifier)))))
                            (any_identifier
                              (no_namespace_identifier
                                (non_template_identifier
                                  (ordinary_identifier))))
                            (parentheses_expression)))))))
                (expression_or_comma_expressions
                  (expression
                    (literal
                      (string)))))))
          (parentheses_expression
            (expression_or_comma_expressions
              (expression
                (binary_expression
                  (expression
                    (method_call
                      (expression
                        (any_identifier
                          (no_namespace_identifier
                            (non_template_identifier
                              (ordinary_identifier)))))
                      (any_identifier
                        (no_namespace_identifier
                          (non_template_identifier
                            (ordinary_identifier))))
                      (parentheses_expression)))
                  (expression
                    (binary_expression
                      (expression
                        (unary_expression
                          (unary_postfix_expression
                            (expression
                              (method_call
                                (expression
                                  (any_identifier
                                    (no_namespace_identifier
                                      (non_template_identifier
                                        (ordinary_identifier)))))
                                (any_identifier
                                  (no_namespace_identifier
                                    (non_template_identifier
                                      (ordinary_identifier))))
                                (parentheses_expression))))))
                      (expression
                        (literal
                          (number))))))))))
        (block
          (statement
            (non_block_statement
              (expression
                (binary_expression
                  (expression
                    (any_identifier
                      (no_namespace_identifier
                        (non_template_identifier
                          (ordinary_identifier)))))
                  (expression
                    (method_call
                      (expression
                        (any_identifier
                          (no_namespace_identifier
                            (non_template_identifier
                              (ordinary_identifier)))))
                      (any_identifier
                        (no_namespace_identifier
                          (non_template_identifier
                            (ordinary_identifier))))
                      (parentheses_expression
                        (expression_or_comma_expressions
                          (comma_expressions
                            (expression
                              (binary_expression
                                (expression
                                  (method_call
                                    (expression
                                      (any_identifier
                                        (no_namespace_identifier
                                          (non_template_identifier
                                            (ordinary_identifier)))))
                                    (any_identifier
                                      (no_namespace_identifier
                                        (non_template_identifier
                                          (ordinary_identifier))))
                                    (parentheses_expression)))
                                (expression
                                  (any_identifier
                                    (no_namespace_identifier
                                      (non_template_identifier
                                        (ordinary_identifier)))))))
                            (expression_or_comma_expressions
                              (expression
                                (any_identifier
                                  (no_namespace_identifier
                                    (non_template_identifier
                                      (ordinary_identifier))))))))))))))))))))

===========================================================
Example of using 'this' as a contract group
===========================================================

function_declaration: @copyable type =
{
    add_initializer: (inout this, source: std::string_view)
        pre<this> (!has_initializer(), "cannot add an initializer to a function that already has one")
        pre<this> (parent_is_type(),   "cannot add an initializer to a function that isn't in a type scope")
    = { print("hello"); }
}

-----------------------------------------------------------

(source_file
  (declaration
    (block_declaration
      (declaration_left_side
        (non_template_identifier
          (ordinary_identifier)))
      (block_definition
        (left_side_of_definition
          (metafunction_arguments
            (any_identifier
              (no_namespace_identifier
                (non_template_identifier
                  (ordinary_identifier)))))
          (type
            (type_type)))
        (block
          (statement
            (block_statement
              (block_declaration
                (declaration_left_side
                  (non_template_identifier
                    (ordinary_identifier)))
                (block_definition
                  (left_side_of_definition
                    (type
                      (function_type
                        (function_type_without_return_type
                          (comma_seperated_declarations
                            (function_declaration_argument
                              (passing_style)
                              (any_identifier
                                (no_namespace_identifier
                                  (non_template_identifier
                                    (ordinary_identifier)))))
                            (function_declaration_argument
                              (declaration
                                (no_definition_declaration
                                  (declaration_left_side
                                    (non_template_identifier
                                      (ordinary_identifier)))
                                  (type
                                    (expression
                                      (any_identifier
                                        (namespaced_identifier
                                          (no_namespace_identifier
                                            (non_template_identifier
                                              (ordinary_identifier)))
                                          (no_namespace_identifier
                                            (non_template_identifier
                                              (ordinary_identifier))))))))))))))
                    (template_call_arguments
                      (expression_or_comma_expressions
                        (expression
                          (any_identifier
                            (no_namespace_identifier
                              (non_template_identifier
                                (ordinary_identifier)))))))
                    (parentheses_expression
                      (expression_or_comma_expressions
                        (comma_expressions
                          (expression
                            (unary_expression
                              (unary_prefix_expression
                                (expression
                                  (function_call
                                    (expression
                                      (any_identifier
                                        (no_namespace_identifier
                                          (non_template_identifier
                                            (ordinary_identifier)))))
                                    (parentheses_expression))))))
                          (expression_or_comma_expressions
                            (expression
                              (literal
                                (string)))))))
                    (template_call_arguments
                      (expression_or_comma_expressions
                        (expression
                          (any_identifier
                            (no_namespace_identifier
                              (non_template_identifier
                                (ordinary_identifier)))))))
                    (parentheses_expression
                      (expression_or_comma_expressions
                        (comma_expressions
                          (expression
                            (function_call
                              (expression
                                (any_identifier
                                  (no_namespace_identifier
                                    (non_template_identifier
                                      (ordinary_identifier)))))
                              (parentheses_expression)))
                          (expression_or_comma_expressions
                            (expression
                              (literal
                                (string))))))))
                  (block
                    (statement
                      (non_block_statement
                        (expression
                          (function_call
                            (expression
                              (any_identifier
                                (no_namespace_identifier
                                  (non_template_identifier
                                    (ordinary_identifier)))))
                            (parentheses_expression
                              (expression_or_comma_expressions
                                (expression
                                  (literal
                                    (string)))))))))))))))))))
